/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	var _core = __webpack_require__(1);

	var _touch = __webpack_require__(6);

	/**
	 * Created by du on 16/9/28.
	 */
	var events = ['swipe', 'swipeLeft', 'swipeRight', 'swipeUp', 'swipeDown', 'tap', 'longTap', 'drag'];
	events.forEach(function (eventName) {
	    _core.$.fn[eventName] = function () {
	        var touch = new _touch.Touch((0, _core.$)(this), eventName, arguments[1]);
	        touch.start();
	        return this.on(eventName, arguments[0]);
	    };
	});
	window.$ = window.neat = _core.$;

/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.$ = $;

	var _statics = __webpack_require__(2);

	var _prototype = __webpack_require__(5);

	/**
	 * Created by du on 16/9/28.
	 */
	function parseDom(arg) {
	    if ($.isObject(arg)) return arg;
	    //trim
	    arg = $.trim(arg);
	    if (arg[0] != "<") {
	        return document.createElement(arg);
	    }
	    var objE = document.createElement("div");
	    objE.innerHTML = arg;
	    return objE.childNodes;
	}

	var neat = function neat(selector, context) {
	    Array.call(this);
	    var t;
	    context = context || document;
	    if ($.isFunction(selector)) {
	        return $(document).ready(selector);
	    } else if ($.isString(selector)) {
	        selector = $.trim(selector);
	        if (selector[0] != "<") {
	            t = context.querySelectorAll(selector);
	        } else {
	            t = parseDom(selector);
	        }
	    } else if (selector instanceof Array) {
	        t = selector;
	    } else {
	        t = [selector];
	    }
	    [].push.apply(this, t);
	};

	function $(selector, context) {
	    return new neat(selector, context);
	}

	$.fn = $.prototype = neat.prototype = Object.create(Array.prototype);
	_statics.method.extend($, _statics.method);
	$.extend($.fn, _prototype.prototype);

/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.method = undefined;

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; }; /**
	                                                                                                                                                                                                                                                   * Created by du on 16/9/28.
	                                                                                                                                                                                                                                                   */
	//静态方法


	var _deferred = __webpack_require__(3);

	var _adjax = __webpack_require__(4);

	var method = exports.method = {
	    extend: function extend(target, ob) {
	        for (var i in ob) {
	            target[i] = ob[i];
	        }
	        return target;
	    },
	    unique: function unique(arrayLike) {
	        arrayLike.sort();
	        var res = [arrayLike[0]];
	        for (var i = 1; i < arrayLike.length; i++) {
	            if (arrayLike[i] !== res[res.length - 1]) {
	                res.push(arrayLike[i]);
	            }
	        }
	        return res;
	    },
	    trim: function trim(s) {
	        return s.replace(/(^\s*)|(\s*$)/g, '');
	    },
	    animate: function animate(speed, argvs, callback) {
	        if (speed < 30) speed = 30;
	        var f = callback || argvs;
	        argvs = callback || undefined;
	        function proxy() {
	            var c = new Date() - start;
	            if (c >= speed) {
	                f(speed, argvs);return;
	            }
	            f(c, argvs);
	            requestAnimationFrame(proxy);
	        }
	        var start = new Date();
	        requestAnimationFrame(proxy);
	    },


	    Deferred: _deferred.deferred
	};
	var testFuns = ["Object", "Function", "String"];
	testFuns.forEach(function (e) {
	    method["is" + e] = function (o) {
	        return (typeof o === "undefined" ? "undefined" : _typeof(o)) === e.toLowerCase();
	    };
	});
	method.extend(method, _adjax.ajax);

/***/ },
/* 3 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.deferred = deferred;
	/**
	 * Created by du on 16/9/28.
	 */

	function Deferred(task) {
	    var _callback = [[], [], []];
	    var _state = 0;
	    var _then = function _then(tag) {
	        for (var _len = arguments.length, callback = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	            callback[_key - 1] = arguments[_key];
	        }

	        for (var i = 0; i < callback.length; ++i) {
	            if (_state == 1) return;
	            if (callback[i]) {
	                _callback[i].push(callback[i]);
	                callback[i].tag = tag;
	            }
	        }
	        return _promise;
	    };
	    var _promise = {
	        then: function then() {
	            var t = [0];
	            return _then.apply(null, t.concat(t.slice.call(arguments)));
	        },
	        done: function done(success) {
	            return _then(1, success);
	        },
	        fail: function fail(_fail) {
	            return _then(1, null, _fail);
	        },
	        always: function always(fun) {
	            return _then(1, fun, fun);
	        }
	    };
	    $.extend(this, {
	        resolve: function resolve(value) {
	            var t = value;
	            var _iteratorNormalCompletion = true;
	            var _didIteratorError = false;
	            var _iteratorError = undefined;

	            try {
	                for (var _iterator = _callback[0][Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	                    var fun = _step.value;

	                    if (_state == 1) return;
	                    value = fun.call(this, value);
	                    value = fun.tag ? t : value;
	                }
	            } catch (err) {
	                _didIteratorError = true;
	                _iteratorError = err;
	            } finally {
	                try {
	                    if (!_iteratorNormalCompletion && _iterator.return) {
	                        _iterator.return();
	                    }
	                } finally {
	                    if (_didIteratorError) {
	                        throw _iteratorError;
	                    }
	                }
	            }
	        },
	        reject: function reject(error) {
	            _state = 1;
	            var _iteratorNormalCompletion2 = true;
	            var _didIteratorError2 = false;
	            var _iteratorError2 = undefined;

	            try {
	                for (var _iterator2 = _callback[1][Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
	                    var fun = _step2.value;

	                    fun.call(this, error);
	                }
	            } catch (err) {
	                _didIteratorError2 = true;
	                _iteratorError2 = err;
	            } finally {
	                try {
	                    if (!_iteratorNormalCompletion2 && _iterator2.return) {
	                        _iterator2.return();
	                    }
	                } finally {
	                    if (_didIteratorError2) {
	                        throw _iteratorError2;
	                    }
	                }
	            }
	        },
	        notify: function notify(progress) {},
	        promise: function promise() {
	            return _promise;
	        }
	    });
	    task(this);
	}

	function deferred(task) {
	    return new Deferred(task);
	}

/***/ },
/* 4 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.ajax = undefined;

	var _deferred = __webpack_require__(3);

	function formatParams(data) {
	    var arr = [];
	    for (var name in data) {
	        arr.push(encodeURIComponent(name) + "=" + encodeURIComponent(data[name]));
	    }
	    return arr;
	} /**
	   * Created by du on 16/9/28.
	   */

	var ajax = exports.ajax = {
	    ajax: function ajax() {
	        var url = arguments.length <= 0 || arguments[0] === undefined ? "" : arguments[0];
	        var data = arguments[1];
	        var options = arguments[2];

	        return (0, _deferred.deferred)(function (defer) {
	            options = $.extend({ type: "GET", dataType: "json" }, options);
	            var params = formatParams(data);
	            var xhr = new XMLHttpRequest();
	            xhr.onreadystatechange = function () {
	                if (xhr.readyState == 4) {
	                    var status = xhr.status;
	                    if (status >= 200 && status < 300) {
	                        defer.resolve(xhr.responseText);
	                    } else {
	                        defer.reject(xhr);
	                    }
	                }
	            };
	            if (options.type.toUpperCase() == "GET") {
	                xhr.open("GET", url + "?" + params, true);
	            } else {
	                xhr.open("POST", url, true);
	                xhr.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
	            }
	            xhr.send(params[0] ? params : null);
	        }).promise();
	    },
	    get: function get(url, data) {
	        return this.ajax(url, data);
	    },
	    post: function post(url, data) {
	        return this.ajax(url, data, { type: "POST" });
	    }
	};

/***/ },
/* 5 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	/**
	 * Created by du on 16/9/28.
	 */

	var prototype = exports.prototype = {

	    ready: function ready(callback) {
	        if (/complete|loaded|interactive/.test(document.readyState) && document.body) {
	            callback($);
	        } else {
	            this.on('DOMContentLoaded', function () {
	                callback($);
	            }, false);
	        }
	        return this;
	    },
	    each: function each(callback) {
	        this.every(function (el, idx) {
	            return callback(el, idx) !== false;
	        });
	        return this;
	    },
	    on: function on(evt, mix, fun) {
	        if ($.isString(mix)) {
	            this.each(function (e) {
	                $(e).on(evt, function () {
	                    var t = event.target;
	                    if ($(mix, e).indexOf(t) != -1) {
	                        fun.call(t, e);
	                    }
	                }, false);
	            });
	        } else {
	            this.each(function (e) {
	                e.addEventListener(evt, mix, false);
	            });
	        }
	        return this;
	    },
	    off: function off(event, callback) {
	        return this.each(function (e) {
	            e.removeEventListener(event, callback, false);
	        });
	    },
	    click: function click(callback) {
	        return this.on("tap", callback);
	    },
	    eq: function eq(index) {
	        return $(this[index]);
	    },
	    last: function last() {
	        return $(this.pop());
	    },
	    add: function add(o) {
	        [].push.apply(this, $(o));
	        return this;
	    },
	    text: function text(s, type) {
	        type = type || "textContent";
	        if (s) {
	            return this.each(function (e) {
	                e[type] = s;
	            });
	        } else {
	            return this[0][type];
	        }
	    },
	    html: function html(s) {
	        return this.text(s, "innerHTML");
	    },
	    children: function children() {
	        var t = [];
	        this.each(function (e) {
	            t.push.apply(t, e.childNodes);
	        });
	        return $($.unique(t).filter(function (e) {
	            return e.nodeType == 1;
	        }));
	    },
	    css: function css(mix, value) {
	        var t = {};
	        if (value) {
	            t[mix] = value;
	        } else if ($.isObject(mix)) {
	            t = mix;
	        }

	        if (JSON.stringify(t) != "{}") {
	            return this.each(function (e) {
	                $.extend(e.style, t);
	            });
	        } else {
	            return this[0] && getComputedStyle(this[0])[mix];
	        }
	    },
	    hide: function hide(s) {
	        s = s ? "none" : "";
	        this.each(function (e) {
	            $(e).css("display", "none");
	        });
	    },
	    show: function show() {
	        this.hide(false);
	    },
	    attr: function attr(name, value) {
	        if (value != undefined) {
	            return this.each(function (e) {
	                e.setAttribute(name, value);
	            });
	        } else {
	            return this[0] && this[0].getAttribute(name);
	        }
	    },
	    removeAttr: function removeAttr(name) {
	        return this.each(function (e) {
	            e.removeAttribute(name);
	        });
	    },
	    hasClass: function hasClass(cls) {
	        return !!this[0].className.match(new RegExp('(\\s|^)' + cls + '(\\s|$)'));
	    },
	    addClass: function addClass(cls) {
	        return this.each(function (f) {
	            if (!$(f).hasClass(cls)) {
	                f.className += " " + cls;
	            }
	        });
	    },
	    removeClass: function removeClass(cls) {
	        return this.each(function (f) {
	            if ($(f).hasClass(cls)) {
	                var reg = new RegExp('(\\s|^)' + cls + '(\\s|$)');
	                f.className = f.className.replace(reg, ' ');
	            }
	        });
	    },
	    find: function find(selector) {
	        return $(selector, this[0]);
	    },
	    append: function append(content) {
	        var to = $(content);
	        return this.each(function (e) {
	            to.each(function (x) {
	                e.appendChild(x);
	            });
	        });
	    },
	    appendTo: function appendTo(s) {
	        $(s).eq(0).append(this);
	        return this;
	    },
	    before: function before(ref) {
	        var t = $(ref);
	        return this.each(function (e) {
	            t.parent()[0].insertBefore(e, t[0]);
	        });
	    },
	    remove: function remove() {
	        this.each(function (e) {
	            $(e).parent()[0].removeChild(e);
	        });
	    },
	    trigger: function trigger(event) {
	        var evt = document.createEvent('HTMLEvents');
	        // initEvent接受3个参数：
	        // 事件类型，是否冒泡，是否阻止浏览器的默认行为
	        evt.initEvent(event, true, true);
	        this[0].dispatchEvent(evt);
	        return this;
	    },
	    animate: function animate(styles, speed) {
	        var _this = this;

	        return $.Deferred(function (d) {
	            var start = {};
	            for (var k in styles) {
	                start[k] = parseFloat($(_this).css(k));
	            }
	            $.animate(speed, styles, function (t) {
	                for (var i in styles) {
	                    $(_this).css(i, start[i] + t / speed * (styles[i] - start[i]));
	                }
	                if (t == speed) {
	                    d.resolve();
	                }
	            });
	        }).promise();
	    }
	};

	var t = ["parentElement", "previousSibling", "nextSibling"];
	t.forEach(function (e) {
	    var i = !e.lastIndexOf("par") ? 6 : 4;
	    prototype[e.substr(0, i)] = function () {
	        var t = [];
	        this.each(function (ele) {
	            t.push(ele[e]);
	        });
	        return $($.unique(t));
	    };
	});

/***/ },
/* 6 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.Touch = undefined;

	var _core = __webpack_require__(1);

	var Touch = exports.Touch = function Touch(target, event, options) {
	    this.target = target;
	    this.e = event;
	    this.options = _core.$.extend({ x: 100, y: 50 }, options);
	}; /**
	    * Created by du on 16/9/29.
	    */


	function _getEvent(e) {
	    var events;
	    if (e.changedTouches) {
	        events = e.changedTouches[0];
	    } else {
	        events = e.originalEvent.touches[0];
	    }
	    return events;
	}
	Touch.prototype.start = function () {
	    var self = this;
	    self.target.on("touchstart", function (event) {
	        var temp = _getEvent(event);
	        self.ts = { x: temp.pageX, y: temp.pageY, d: new Date() };
	    });
	    self.target.on("touchmove", function (event) {
	        var temp = _getEvent(event);
	        self.tm = { x: temp.pageX, y: temp.pageY };
	        if (self.e == "drag") {
	            self.target.trigger(self.e, self.tm);
	            return;
	        }
	    });
	    self.target.on("touchend", function () {
	        if (!self.tm) {
	            self.tm = self.ts;
	        }
	        self.te = { x: self.tm.x - self.ts.x, y: self.tm.y - self.ts.y, d: new Date() - self.ts.d };
	        self.tm = undefined;
	        self.factory();
	    });
	};
	Touch.prototype.factory = function () {
	    var x = Math.abs(this.te.x);
	    var y = Math.abs(this.te.y);
	    var t = this.te.d;
	    var s = this.status;
	    if (x < 5 && y < 5) {
	        if (t < 300) {
	            s = "tap";
	        } else {
	            s = "longTap";
	        }
	    } else if (x > this.options.x && y < this.options.y) {
	        if (t < 2000) {
	            if (this.te.x > 0) {
	                s = "swipeLeft";
	            } else {
	                s = "swipeRight";
	            }
	        } else {
	            s = "swipe";
	        }
	    } else if (x < this.options.x && y > this.options.y) {
	        if (t < 2000) {
	            if (this.te.y > 0) {
	                s = "swipeDown";
	            } else {
	                s = "swipeUp";
	            }
	        } else {
	            s = "swipe";
	        }
	    } else if (x > this.options.x && y > this.options.y) {
	        if (t < 2000) {
	            if (this.options.x < this.options.y) {
	                if (this.te.y > 0) {
	                    s = "swipeDown";
	                } else {
	                    s = "swipeUp";
	                }
	            } else {
	                if (this.te.x > 0) {
	                    s = "swipeLeft";
	                } else {
	                    s = "swipeRight";
	                }
	            }
	        } else {
	            s = "swipe";
	        }
	    }
	    // console.log(s,this.e);
	    if (s == this.e) {
	        this.target.trigger(this.e);
	        return;
	    }
	};

/***/ }
/******/ ]);